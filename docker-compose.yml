version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: fortexa-postgres
    environment:
      POSTGRES_USER: fortexa
      POSTGRES_PASSWORD: fortexa123
      POSTGRES_DB: fortexa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/db/init:/docker-entrypoint-initdb.d
    networks:
      - fortexa-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: fortexa-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - fortexa-network

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: fortexa-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - fortexa-network

  # Kafka UI for easier management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: fortexa-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: fortexa-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - fortexa-network

  # Redis for caching and rate limiting
  redis:
    image: redis:7
    container_name: fortexa-redis
    ports:
      - "6379:6379"
    networks:
      - fortexa-network

volumes:
  postgres_data:

networks:
  fortexa-network:
    driver: bridge 